(()=>{"use strict";var t={159:(t,e,n)=>{n.d(e,{A:()=>E});var i=n(354),r=n.n(i),a=n(314),s=n.n(a),o=n(417),c=n.n(o),l=new URL(n(270),n.b),d=new URL(n(428),n.b),A=new URL(n(728),n.b),p=new URL(n(957),n.b),h=s()(r()),u=c()(l),m=c()(d),f=c()(A),g=c()(p);h.push([t.id,`:root {\n  --font-family:  "soda shake regular",  "character font", sans-serif, system-ui;\n  font-size: 16px;\n}\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  height: 100vh;\n  width: 100vw;\n\n  /* Descendants: */\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 95vh 5vh;\n}\n\n@font-face {\n  font-family: "soda shake regular";\n  src: url(${u}),\n  url(${m});\n}\n\n@font-face {\n  font-family: "character font";\n  src: url(${f}),\n  url(${g});\n}\n\n#main {\n  /* Descendants: */\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 90fr 10fr;\n}\n\n#players-container {\n  /* Descendants */\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n  min-width: 1300px;\n}\n\n.btns-container {\n  /* Descendants: */\n  position: relative;\n}\n\n.btns-container button {\n  position: absolute;\n  top: 50%; \n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n\n.player-wrapper {\n  /* Descendants */\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 10fr 90fr;\n  min-width: 500px;\n}\n\n.gameboard-container,\n.btns-container {\n  /*  Descendants*/\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.player-heading {\n  font-size: 2.5rem;\n  font-family: "soda shake regular";\n\n  /* Text Content */\n  display: flex;\n  justify-content: center;\n  align-items: end;\n}\n\n.gameboard {\n  height: 75%;\n  width: 75%;\n\n  /* Descendants */\n  display: grid;\n  grid-template-rows: repeat(10, 1fr); \n  gap: 1px;\n}\n\n.row {\n  /* Descendants: */\n  display: grid;\n  grid-template-columns: repeat(10, 35px); \n  gap: 1px;\n}\n\n.cell {\n  background-color: #ebebeb;\n  border: 1px solid white;\n  height: 45px;\n  max-width: 35px;\n\n  /* X-marks */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.cell svg {\n  width: 75%;\n  height: 75%;\n}\n\n#player2 .cell.hit {\n  background-color: red;\n}\n\n#player2 .cell.hit:hover {\n  background-color: red;\n}\n\n#player2 .cell:hover {\n  background-color: #d7d7d7;\n}\n\n#player2 .cell:hover,\n#play-btn:hover,\n#reset-btn:hover,\n#player1 .ship:hover,\n.cell.occupied {\n  cursor: pointer;\n}\n\n#play-btn, \n#reset-btn {\n  background-color: #56CAFF;\n  border: none;\n  border-radius: 20px;\n  box-shadow: 0px 5px 20px #56CAFF;\n  font-family: "soda shake regular";\n  font-size: 3rem;\n  font-weight: bold;\n  height: 75px;\n  padding: 10px 50px;\n  width: 150px;\n\n  /* Text content */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n#play-btn:active,\n#reset-btn:active {\n  top: 54%; \n}\n\n/* Higher specificity comes later then blue */\n#reset-btn {\n  background-color: red;\n  box-shadow: 0px 5px 20px red;\n\n}\n\n#player1 .ships-and-board {\n  display: grid;\n  grid-template-columns: 35fr 75fr;\n  grid-template-rows: 1fr;\n}\n\n#player2 .ships-and-board {\n  display: grid;\n  grid-template-columns: 75fr 35fr;\n  grid-template-rows: 1fr;\n}\n\n.fleet-container {\n  /* Descendants */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.fleet {\n  background-color: #f3f3f3;\n  border-radius: 20px;\n  height: 75%;\n  padding-top: 50px;\n  min-width: 200px;\n\n  /* Descendants: Ships */\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  justify-content: start;\n}\n\n.ship {\n  height: 7.5%;\n  /* width: 100%; */\n\n  /* Descendants: Parts */\n  display: flex;\n  gap: 2px;\n}\n\n#player1 .ship-part {\n  background-color: #56CAFF;\n}\n\n#player2 .ship-part {\n  background-color: red;\n}\n\n.ship-part {\n  height: 45px;\n  width: 35px;\n}\n\n.highlighted,\n.occupied {\n  background-color: #56CAFF;\n}\n\n#placement-warning, \n#instructions {\n  background-color: #ff7272;\n  border: none;\n  border-radius: 20px;\n  font-family: "soda shake regular";\n  z-index: 10;\n\n  /* Text Content */\n  align-items: center;\n  display: flex;\n  font-size: 2rem;\n  justify-content: center;\n}\n\n#placement-warning {\n  height: 150px;\n  width: 400px;\n\n  /* Positioning: */\n  top: 20%; \n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n#instructions {\n  height: 150px;\n  width: 300px;\n\n  /* Positioning: */\n  top: 35%; \n  left: 33%;\n  transform: translate(-50%, -50%);\n}`,"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"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",sourcesContent:[':root {\n  --font-family:  "soda shake regular",  "character font", sans-serif, system-ui;\n  font-size: 16px;\n}\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  height: 100vh;\n  width: 100vw;\n\n  /* Descendants: */\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 95vh 5vh;\n}\n\n@font-face {\n  font-family: "soda shake regular";\n  src: url(../assets/fonts/webfonts/soda_shake-webfont.woff2),\n  url(../assets/fonts/webfonts/soda_shake-webfont.woff);\n}\n\n@font-face {\n  font-family: "character font";\n  src: url(../assets/fonts/webfonts/characterfontmain-regular-webfont.woff2),\n  url(../assets/fonts/webfonts/characterfontnumbers-regular-webfont.woff2);\n}\n\n#main {\n  /* Descendants: */\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 90fr 10fr;\n}\n\n#players-container {\n  /* Descendants */\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n  min-width: 1300px;\n}\n\n.btns-container {\n  /* Descendants: */\n  position: relative;\n}\n\n.btns-container button {\n  position: absolute;\n  top: 50%; \n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n\n.player-wrapper {\n  /* Descendants */\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 10fr 90fr;\n  min-width: 500px;\n}\n\n.gameboard-container,\n.btns-container {\n  /*  Descendants*/\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.player-heading {\n  font-size: 2.5rem;\n  font-family: "soda shake regular";\n\n  /* Text Content */\n  display: flex;\n  justify-content: center;\n  align-items: end;\n}\n\n.gameboard {\n  height: 75%;\n  width: 75%;\n\n  /* Descendants */\n  display: grid;\n  grid-template-rows: repeat(10, 1fr); \n  gap: 1px;\n}\n\n.row {\n  /* Descendants: */\n  display: grid;\n  grid-template-columns: repeat(10, 35px); \n  gap: 1px;\n}\n\n.cell {\n  background-color: #ebebeb;\n  border: 1px solid white;\n  height: 45px;\n  max-width: 35px;\n\n  /* X-marks */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.cell svg {\n  width: 75%;\n  height: 75%;\n}\n\n#player2 .cell.hit {\n  background-color: red;\n}\n\n#player2 .cell.hit:hover {\n  background-color: red;\n}\n\n#player2 .cell:hover {\n  background-color: #d7d7d7;\n}\n\n#player2 .cell:hover,\n#play-btn:hover,\n#reset-btn:hover,\n#player1 .ship:hover,\n.cell.occupied {\n  cursor: pointer;\n}\n\n#play-btn, \n#reset-btn {\n  background-color: #56CAFF;\n  border: none;\n  border-radius: 20px;\n  box-shadow: 0px 5px 20px #56CAFF;\n  font-family: "soda shake regular";\n  font-size: 3rem;\n  font-weight: bold;\n  height: 75px;\n  padding: 10px 50px;\n  width: 150px;\n\n  /* Text content */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n#play-btn:active,\n#reset-btn:active {\n  top: 54%; \n}\n\n/* Higher specificity comes later then blue */\n#reset-btn {\n  background-color: red;\n  box-shadow: 0px 5px 20px red;\n\n}\n\n#player1 .ships-and-board {\n  display: grid;\n  grid-template-columns: 35fr 75fr;\n  grid-template-rows: 1fr;\n}\n\n#player2 .ships-and-board {\n  display: grid;\n  grid-template-columns: 75fr 35fr;\n  grid-template-rows: 1fr;\n}\n\n.fleet-container {\n  /* Descendants */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.fleet {\n  background-color: #f3f3f3;\n  border-radius: 20px;\n  height: 75%;\n  padding-top: 50px;\n  min-width: 200px;\n\n  /* Descendants: Ships */\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  justify-content: start;\n}\n\n.ship {\n  height: 7.5%;\n  /* width: 100%; */\n\n  /* Descendants: Parts */\n  display: flex;\n  gap: 2px;\n}\n\n#player1 .ship-part {\n  background-color: #56CAFF;\n}\n\n#player2 .ship-part {\n  background-color: red;\n}\n\n.ship-part {\n  height: 45px;\n  width: 35px;\n}\n\n.highlighted,\n.occupied {\n  background-color: #56CAFF;\n}\n\n#placement-warning, \n#instructions {\n  background-color: #ff7272;\n  border: none;\n  border-radius: 20px;\n  font-family: "soda shake regular";\n  z-index: 10;\n\n  /* Text Content */\n  align-items: center;\n  display: flex;\n  font-size: 2rem;\n  justify-content: center;\n}\n\n#placement-warning {\n  height: 150px;\n  width: 400px;\n\n  /* Positioning: */\n  top: 20%; \n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n#instructions {\n  height: 150px;\n  width: 300px;\n\n  /* Positioning: */\n  top: 35%; \n  left: 33%;\n  transform: translate(-50%, -50%);\n}'],sourceRoot:""}]);const E=h},314:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",i=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),i&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),i&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,i,r,a){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(i)for(var o=0;o<this.length;o++){var c=this[o][0];null!=c&&(s[c]=!0)}for(var l=0;l<t.length;l++){var d=[].concat(t[l]);i&&s[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},417:t=>{t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},354:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:t=>{var e=[];function n(t){for(var n=-1,i=0;i<e.length;i++)if(e[i].identifier===t){n=i;break}return n}function i(t,i){for(var a={},s=[],o=0;o<t.length;o++){var c=t[o],l=i.base?c[0]+i.base:c[0],d=a[l]||0,A="".concat(l," ").concat(d);a[l]=d+1;var p=n(A),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(h);else{var u=r(h,i);i.byIndex=o,e.splice(o,0,{identifier:A,updater:u,references:1})}s.push(A)}return s}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var a=i(t=t||[],r=r||{});return function(t){t=t||[];for(var s=0;s<a.length;s++){var o=n(a[s]);e[o].references--}for(var c=i(t,r),l=0;l<a.length;l++){var d=n(a[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},659:t=>{var e={};t.exports=function(t,n){var i=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},540:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},56:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},825:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,r&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},113:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},728:(t,e,n)=>{t.exports=n.p+"46781a2df59939553aea.woff2"},957:(t,e,n)=>{t.exports=n.p+"b5737c23b6e1279d1e9a.woff2"},428:(t,e,n)=>{t.exports=n.p+"7ac023bc41c0f4f4e860.woff"},270:(t,e,n)=>{t.exports=n.p+"b79f405876328cfb411c.woff2"}},e={};function n(i){var r=e[i];if(void 0!==r)return r.exports;var a=e[i]={id:i,exports:{}};return t[i](a,a.exports,n),a.exports}n.m=t,n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(t=e.currentScript.src),!t)){var i=e.getElementsByTagName("script");if(i.length)for(var r=i.length-1;r>-1&&(!t||!/^http(s?):/.test(t));)t=i[r--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.b=document.baseURI||self.location.href,n.nc=void 0;var i=n(72),r=n.n(i),a=n(825),s=n.n(a),o=n(659),c=n.n(o),l=n(56),d=n.n(l),A=n(540),p=n.n(A),h=n(113),u=n.n(h),m=n(159),f={};f.styleTagTransform=u(),f.setAttributes=d(),f.insert=c().bind(null,"head"),f.domAPI=s(),f.insertStyleElement=p(),r()(m.A,f),m.A&&m.A.locals&&m.A.locals;class g{constructor(){this.occupied=!1,this.ship=null,this.hitCount=0}}class E{constructor(){this.boardSize=10,this.board=this.initialiseBoard(this.boardSize),this.missedShots=[],this.fleet=[]}placeShip(t,e,n){const[i,r]=e,a=t.length;let s,o,c,l;"horizontal"===n?(s=i,o=r+a-1,c=0,l=1):"vertical"===n&&(s=i+a-1,o=r,c=1,l=0),!0===this.validateAndPlaceShip(t,i,r,s,o,c,l)&&this.fleet.push({id:t,length:a,sunk:!1})}receiveAttack(t,e){const[n,i]=t,r=this.board[n][i];return!(!1===r.occupied&&r.hitCount>0)&&(!1===r.occupied&&0===r.hitCount?(r.hitCount+=1,this.missedShots.push(t),!1):(r.ship.hit(),r.hitCount+=1,!0===r.ship.isSunk()&&(this.fleet.filter(((t,e,n)=>{t.id===r.ship&&(this.fleet[e].sunk=!0)})),"human"===e&&function(t){const e=document.querySelector(`#player2 [data-size='${t}']`);3===t&&"hidden"===e.style.visibility&&(e.nextElementSibling.style.visibility="hidden"),e.style.visibility="hidden"}(r.ship.length)),this.areAllShipsSunk()))}areAllShipsSunk(){return this.fleet.every((t=>!0===t.sunk))}initialiseBoard(t){const e=Array(10).fill(null).map((()=>[]));return e.forEach((e=>{for(;e.length<t;)e.push(new g)})),e}validateAndPlaceShip(t,e,n,i,r,a,s){if(e===i+a&&n===r+s)return!0;if(e<0||e>=this.boardSize)return!1;if(n<0||n>=this.boardSize)return!1;const o=this.board[e][n];return!0!==o.occupied&&(!0===this.validateAndPlaceShip(t,e+a,n+s,i,r,a,s)&&(o.occupied=!0,o.ship=t,!0))}}class C{constructor(){this.gameboard=new E}}class y{constructor(t){this.length=t,this.hits=0}hit(){this.hits++}isSunk(){return this.hits>=this.length}}class b{constructor(){this.playerShipPlacements=[]}getPlayerShipPlacements(){const t=function(){const t=document.querySelectorAll(".gameboard"),e=[];return["player1"].forEach(((n,i)=>{const r=document.querySelector(`#${n} .fleet`);if(null!==r){const n=r.querySelectorAll(".ship"),a=Array.from(n).map((t=>({size:parseInt(t.dataset.size),orientation:t.dataset.orientation,id:t.dataset.shipId}))),s=0===i?t[0]:t[1],o=a.map((t=>({start:function(t,e){let n=e.querySelector(`[data-ship-id="${t}"]`);return n=[Number(n.getAttribute("data-row")),Number(n.getAttribute("data-col"))],n}(t.id,s),orientation:t.orientation,length:t.size})));e.push(o)}})),e}();return t.forEach((t=>{this.playerShipPlacements.push(t)})),1===t.length&&this.playerShipPlacements.push(function(){const t=Array(10).fill(null).map((()=>Array(10).fill(0)));return[{name:"Carrier",length:5},{name:"Battleship",length:4},{name:"Cruiser",length:3},{name:"Submarine",length:3},{name:"Destroyer",length:2}].map((e=>{const n=0===Math.round(Math.random())?"horizontal":"vertical",i=function(t,e,n){let i,r=!1;for(;!1===r;){let a=Math.floor(10*Math.random()),s=Math.floor(10*Math.random());const o=[];if(0===t[a][s]){for(let i=0;i<e&&a<10&&s<10&&0===t[a][s];i++)o.push([a,s]),"horizontal"===n?s+=1:a+=1;o.length===e&&(r=!0,i=o[0],o.forEach((e=>{let[n,i]=e;t[n][i]=1})))}}return i}(t,e.length,n);return{start:i,orientation:n,length:e.length}}))}()),this.playerShipPlacements}}class v{constructor(){this.attackCoords=[],this.hits=0,this.precision=!1,this.preciseCoords=[],this.firstHit=[],this.removed=!1}shuffle(){for(let t=this.attackCoords.length-1;t>0;t--){const e=Math.floor(Math.random()*(t+1));[this.attackCoords[t],this.attackCoords[e]]=[this.attackCoords[e],this.attackCoords[t]]}}getAttackCoordinates(){if(this.preciseCoords.length>0){const t=this.preciseCoords.pop(),e=this.attackCoords.findIndex((e=>e[0]===t[0]&&e[1]===t[1]));return this.attackCoords.splice(e,1),t}return this.precision=!1,this.removed=!1,this.shuffle(),this.attackCoords.pop()}addNewPreciseCoords(t,e,n,i,r){const a=[];t?(e-1>=0&&a.push([e-1,r]),e+1<10&&a.push([e+1,r])):(n-1>=0&&a.push([i,n-1]),n+1<10&&a.push([i,n+1])),a.forEach((t=>{const e=this.attackCoords.some((e=>{let[n,i]=e;return n===t[0]&&i===t[1]})),n=this.preciseCoords.some((e=>{let[n,i]=e;return n===t[0]&&i===t[1]}));e&&!n&&this.preciseCoords.push(t)}))}refineAttackStrategy(t){const[e,n]=this.firstHit,[i,r]=t,a=e===i,s=n===r;this.preciseCoords=this.preciseCoords.filter((t=>{let[i,r]=t;return a&&i===e||s&&r===n})),this.addNewPreciseCoords(s,i,r,e,n),this.removed=!0,this.hits+=1}addCoordIfNotAttacked(t){this.attackCoords.some((e=>e[0]===t[0]&&e[1]===t[1]))&&this.preciseCoords.push(t)}predictCoordinates(t){const[e,n]=t;for(let t=n-1;t<n+2;t+=2)t>=0&&t<=9&&this.addCoordIfNotAttacked([e,t]);for(let t=e-1;t<e+2;t+=2)t>=0&&t<=9&&this.addCoordIfNotAttacked([t,n])}initiatePrecisionAttack(t){this.hits+=1,this.firstHit=t,this.precision=!0,this.predictCoordinates(t)}processAttackResult(t,e){t&&this.precision&&this.removed&&this.refineAttackStrategy(e),t&&this.precision&&!this.removed&&this.refineAttackStrategy(e),t&&!this.precision&&this.initiatePrecisionAttack(e)}generatePossibleAttacks(t){t.forEach(((t,e)=>{t.forEach(((t,n)=>{this.attackCoords.push([e,n])}))}))}}class B{constructor(){this.player1=null,this.player2=null,this.computerPlayer=new v,this.gameWon=!1,this.gameActive=!1,this.coordinates=new b}startGame(){this.player1=new C,this.player2=new C,this.computerPlayer.generatePossibleAttacks(this.player1.gameboard.board)}placeShips(){this.coordinates.getPlayerShipPlacements().forEach(((t,e)=>{const n=0===e?this.player1:this.player2;t.forEach((t=>{const e=new y(t.length);n.gameboard.placeShip(e,t.start,t.orientation)}))}))}attack(t){if(!0===this.gameWon||!1===this.gameActive)return;const e=this.player2.gameboard.receiveAttack(t,"human");this.dispatchAttackEvent("human",t,this.player2.gameboard),!0===e?this.gameWon=!0:this.playComputerTurn()}playComputerTurn(){const t=this.computerPlayer.getAttackCoordinates(),e=this.player1.gameboard.receiveAttack(t,"computer"),n=this.checkHits();this.computerPlayer.processAttackResult(n,t),this.dispatchAttackEvent("computer",t,this.player1.gameboard),!0===e?this.gameWon=!0:this.gameWon}checkHits(){return this.player1.gameboard.board.reduce(((t,e)=>t+e.reduce(((t,e)=>!0===e.occupied&&e.hitCount>=1?t+1:t),0)),0)!==this.computerPlayer.hits}getPlayers(){return[this.player1,this.player2]}dispatchAttackEvent(t,e,n){const i=new CustomEvent("attackMade",{detail:{player:t,coordinates:e,gameboard:n}});document.dispatchEvent(i)}}function w(t,e){const n=e.draggedShip.getAttribute("data-ship-id"),i=t.querySelectorAll(`[data-ship-id="${n}"]`);null!==i&&i.forEach((t=>{t.classList.remove("occupied"),t.removeAttribute("data-ship-id")}))}function x(){document.querySelectorAll(".highlighted").forEach((t=>{t.classList.remove("highlighted")}))}class k{static shipListeners=[];static cellListeners=[];static addShipEventListeners(t){this.shipListeners=t}static addCellListeners(t){this.cellListeners=t}static removeShipEventListeners(){this.shipListeners.forEach((t=>{let{ship:e,listener:n}=t;e.removeEventListener("mousedown",n)})),this.shipListeners=[]}static removeCellListeners(){this.cellListeners.forEach((t=>{let{cell:e,mouseDownListener:n,rotateListener:i}=t;e.removeEventListener("mousedown",n),e.removeEventListener("dblclick",i)})),this.cellListeners=[]}}function S(t,e){const n=[];t.forEach((t=>{let i=0,r=0,a=0,s=0,o=null,c=null;const l=t=>{o.style.display="none";const e=document.elementFromPoint(t.clientX,t.clientY);return o.style.display="",e},d=()=>{o.style.position="",o.style.top="",o.style.left="",o.style.transform="",o.setAttribute("data-orientation","horizontal"),o.remove(),c.appendChild(o),o.style.opacity="1",i=0,r=0,a=0,s=0},A=n=>{const i=l(n);let r=!1;if(i&&i.classList.contains("cell")){const{size:n,orientation:i}=o.dataset;r=function(t,e){const n=function(t,e){return e.querySelectorAll(".highlighted").length===Number(t.size)}(t,e);return!0===n?(function(t,e){w(t,e);const n=e.draggedShip.getAttribute("data-ship-id");t.querySelectorAll(".highlighted").forEach((t=>{t.classList.remove("highlighted"),t.classList.add("occupied"),t.setAttribute("data-ship-id",n)})),e.draggedShip.style.visibility="hidden"}(e,t),!0):(w(e,t),!1)}({size:n,orientation:i,draggedShip:t},e),!1===r&&d()}else w(e,{draggedShip:t}),d();document.removeEventListener("mousemove",p),document.removeEventListener("mouseup",A)},p=e=>{document.addEventListener("mouseup",A),(t=>{a=i-t.clientX,s=r-t.clientY,i=t.clientX,r=t.clientY,o.style.top=r+"px",o.style.left=i+"px"})(e),o.style.opacity="0.5";const n=l(e);if(n&&n.classList.contains("cell")){o.style.opacity="0";const{size:e,orientation:i}=t.dataset,r=new CustomEvent("customdragover",{detail:{size:e,orientation:i}});n.dispatchEvent(r)}else"vertical"===o.getAttribute("data-orientation")&&(o.style.opacity="0"),x()},h=t=>{o=t.target.closest(".ship"),c=o.parentNode,o.style.position="absolute",i=t.clientX,r=t.clientY,document.addEventListener("mousemove",p)};t.addEventListener("mousedown",h),n.push({ship:t,listener:h})})),k.addShipEventListeners(n)}function L(t,e){const n=[];t.forEach((t=>{t.addEventListener("customdragover",(n=>{!function(t,e,n){const{orientation:i}=e,r=Number(e.size),a=[];let s=Number(t.getAttribute("data-row")),o=Number(t.getAttribute("data-col"));x();for(let t=0;t<r;t++){const t=n.querySelector(`[data-row='${s}'][data-col='${o}']`);null===t||t.classList.contains("occupied")||(a.push(t),"horizontal"===i?o++:"vertical"===i&&s++)}a.length===r&&a.forEach((t=>{t.classList.add("highlighted")}))}(t,n.detail,e)}));let i=null;const r=function(){null===i&&(i=setTimeout((()=>{if(t.classList.contains("occupied")){const e=t.getAttribute("data-ship-id"),n=document.querySelector(`[data-ship-id="${e}"]`);if(null!==n){n.style.visibility="visible";const t=new MouseEvent("mousedown");n.dispatchEvent(t)}}i=null}),200))},a=function(){null!==i&&(clearTimeout(i),i=null),t.classList.contains("occupied")&&function(t,e){const n=t.getAttribute("data-ship-id"),i=document.querySelector(`[data-ship-id="${n}"]`),r=i.getAttribute("data-orientation"),a=e.querySelectorAll(`[data-ship-id="${n}"]`),s=function(t,e,n){const i=t.length,r=Array.from(t),a=[r[0]];let s=Number(r[0].getAttribute("data-row")),o=Number(r[0].getAttribute("data-col"));const c="horizontal"===e;for(let t=1;t<i;t++){!0===c?s+=1:o+=1;const t=n.querySelector(`[data-row='${s}'][data-col='${o}']`);if(!t||t.classList.contains("occupied"))return null;a.push(t)}return a}(a,r,e);null!==s&&(a.forEach((t=>{t.classList.remove("occupied"),t.removeAttribute("data-ship-id")})),s.forEach((t=>{t.classList.add("occupied"),t.setAttribute("data-ship-id",n)})),"horizontal"===r?(i.style.transform="rotate(90deg)",i.setAttribute("data-orientation","vertical")):(i.style.transform="rotate(0deg)",i.setAttribute("data-orientation","horizontal")))}(t,e)};t.addEventListener("mousedown",r),t.addEventListener("dblclick",a),n.push({cell:t,mouseDownListener:r,rotateListener:a})})),k.addCellListeners(n)}function z(t,e,n){const i=document.createElement("div");i.id="players-container",t.forEach(((t,e)=>{const r=function(t){const e=document.createElement("div");return e.className="player-wrapper",e.id=0===t?"player1":"player2",e}(e),a=function(t){const e=document.createElement("h1");return e.textContent=0===t?"Human":"Computer",e.className="player-heading",e}(e),s=function(t,e){const n=document.createElement("div");n.className="ships-and-board";const i=function(){const t=document.createElement("div");t.className="fleet-container";const e=document.createElement("div");return e.className="fleet",[5,4,3,3,2].forEach(((t,n)=>{const i=document.createElement("div");i.className="ship",i.setAttribute("data-size",`${t}`),i.setAttribute("data-orientation","horizontal"),i.setAttribute("data-ship-id",`ship-${n}`);let r=t;for(;r>0;){const t=document.createElement("div");t.className="ship-part",i.appendChild(t),r-=1}e.appendChild(i)})),t.appendChild(e),t}(),r=function(t){const e=document.createElement("div");e.className="gameboard-container";const n=document.createElement("div");return n.className="gameboard",t.forEach(((t,e)=>{const i=document.createElement("div");i.className="row",t.forEach(((t,n)=>{const r=document.createElement("div");r.className="cell",r.setAttribute("data-row",e),r.setAttribute("data-col",n),i.appendChild(r)})),n.appendChild(i)})),e.appendChild(n),e}(t);return 0===e?(n.appendChild(i),n.appendChild(r),n):(n.appendChild(r),n.appendChild(i),n)}(t.gameboard.board,e);if(r.appendChild(a),r.appendChild(s),i.appendChild(r),0===e){const t=r.querySelectorAll(".ship"),e=r.querySelector(".gameboard");S(t,e),L(r.querySelectorAll(".cell"),e)}1===e&&function(t,e){t.querySelectorAll(".cell").forEach((t=>{const n=Number(t.getAttribute("data-row")),i=Number(t.getAttribute("data-col"));t.addEventListener("click",(()=>{e.gameActive&&!t.hasAttribute("data-attacked")&&(t.setAttribute("data-attacked","true"),e.attack([n,i]))}))}))}(r.querySelector(".gameboard"),n)})),e.appendChild(i)}class j{constructor(){this.container=document.getElementById("main"),this.currentGame=null,this.attackHandler=null}renderGameboards(t,e){this.clearInterface(),this.currentGame=e,z(t,this.container,this.currentGame),function(t){const e=document.createElement("div");e.className="btns-container";const n=document.createElement("button");n.id="play-btn",n.textContent="Play!",e.appendChild(n);const i=document.createElement("button");i.id="reset-btn",i.textContent="Reset",i.style.visibility="hidden",e.appendChild(i),t.appendChild(e),n.addEventListener("click",(()=>{if(0==(17===document.querySelectorAll(".occupied").length))return void function(){const t=document.createElement("dialog");t.id="placement-warning",t.textContent="Place ships to start",document.body.appendChild(t),t.show(),setTimeout((()=>{t.close(),t.remove()}),600)}();k.removeShipEventListeners(),k.removeCellListeners();const t=new CustomEvent("startGame");document.dispatchEvent(t),n.style.visibility="hidden",i.style.visibility="visible"})),i.addEventListener("click",(()=>{const t=new CustomEvent("resetGame");document.dispatchEvent(t),i.style.visibility="hidden",n.style.visibility="visible"}))}(this.container),function(){const t=document.createElement("dialog");t.id="instructions",t.textContent="Drag ships to board.\nOnce placed, double-click to rotate.",document.body.appendChild(t),t.show(),setTimeout((()=>{t.close(),t.remove()}),3e3)}(),this.listenToGameEvents()}setupInstructions(){}updateBoardUI(t,e,n){const i="human"===t?"player2":"player1",[r,a]=e.map(Number),s=document.querySelector(`#${i} .cell[data-row="${r}"][data-col="${a}"]`);!0===n.board[r][a].occupied&&s.classList.add("hit");const o=function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"#000000",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:25;const n="http://www.w3.org/2000/svg",i=document.createElementNS(n,"svg");i.setAttribute("version","1.0"),i.setAttribute("xmlns","http://www.w3.org/2000/svg"),i.setAttribute("width",`${e}pt`),i.setAttribute("height",e*(1135/1280)+"pt"),i.setAttribute("viewBox","0 0 1280.000000 1135.000000"),i.setAttribute("preserveAspectRatio","xMidYMid meet");const r=document.createElementNS(n,"g");r.setAttribute("transform","translate(0.000000,1135.000000) scale(0.100000,-0.100000)"),r.setAttribute("fill",t),r.setAttribute("stroke","none");const a=document.createElementNS(n,"path");return a.setAttribute("d","M2982 11280 c-207 -127 -418 -310 -1524 -1328 l-428 -393 0 -115 c0 -146 22 -259 96 -486 153 -469 370 -967 743 -1703 418 -825 802 -1507 1030 -1833 109 -156 195 -314 235 -434 28 -85 96 -348 96 -373 0 -9 -67 -116 -149 -238 -290 -432 -392 -572 -720 -982 -322 -402 -431 -553 -701 -975 -293 -457 -421 -640 -715 -1020 -77 -100 -189 -250 -248 -333 -179 -251 -548 -812 -660 -1004 l-36 -63 124 0 c192 0 352 43 703 189 488 203 848 396 1116 599 63 48 184 140 269 204 85 64 233 171 328 238 371 258 421 294 555 402 298 238 601 505 1333 1176 l384 352 136 0 c87 0 157 -5 192 -14 123 -32 291 -120 534 -278 282 -183 509 -315 753 -437 309 -155 671 -281 1347 -466 744 -204 1347 -324 1910 -381 217 -22 692 -25 845 -5 400 51 703 184 1875 819 198 107 366 200 373 207 10 9 -189 62 -940 250 -1231 307 -1655 423 -2201 601 -696 228 -1302 496 -1826 807 -282 166 -412 263 -790 582 l-213 180 5 145 c5 162 16 209 78 334 76 152 197 308 768 986 210 250 490 592 620 760 131 168 325 411 431 540 276 338 394 522 486 762 31 81 168 587 161 595 -4 4 -912 166 -1137 203 -418 69 -684 94 -922 88 -147 -4 -201 -11 -363 -43 l-190 -37 -84 -87 c-100 -103 -179 -201 -547 -681 -154 -201 -418 -540 -587 -753 -169 -214 -335 -424 -370 -467 l-62 -79 -73 0 c-86 -1 -110 9 -173 76 -209 219 -682 1050 -932 1638 -191 450 -298 769 -477 1430 -104 383 -211 727 -251 805 -9 19 -35 52 -56 72 l-38 37 -113 -69z"),r.appendChild(a),i.appendChild(r),i}();s.appendChild(o)}listenToGameEvents(){null!==this.attackHandler&&document.removeEventListener("attackMade",this.attackHandler),this.attackHandler=t=>{const{player:e,coordinates:n,gameboard:i}=t.detail;this.updateBoardUI(e,n,i)},document.addEventListener("attackMade",this.attackHandler)}clearInterface(){for(;this.container.firstChild;)this.container.removeChild(this.container.firstChild)}}class P{constructor(){this.game=new B,this.interfaceManager=new j,this.setupPlayListener(),this.setupResetListener()}startApplication(){this.game.startGame();const t=this.game.getPlayers();this.interfaceManager.renderGameboards(t,this.game)}resetGame(){this.game=new B,this.startApplication()}setupPlayListener(){document.addEventListener("startGame",(()=>{this.game.gameActive=!0,this.game.placeShips()}))}setupResetListener(){document.addEventListener("resetGame",(()=>{this.resetGame()}))}}document.addEventListener("DOMContentLoaded",(()=>{(new P).startApplication()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,